{"version":3,"file":"static/js/220.bfb1d0bf.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","hooks/useAddContact.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","hooks/useShowContacts.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectUserContacts = state => state.contacts.contacts;\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/operations';\nimport { selectUserContacts } from 'redux/contacts/selectors';\n\nconst useAddContact = () => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n\n    dispatch(addContactThunk({ name, number }));\n    form.reset();\n  };\n\n  return { handleSubmit };\n};\n\nexport default useAddContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"contactFormBtn\":\"ContactForm_contactFormBtn__Vy3TA\"};","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport useAddContact from 'hooks/useAddContact';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const { handleSubmit } = useAddContact();\n\n  return (\n    <div className={css.container}>\n      <h1>Add New Contact</h1>\n      <Form onSubmit={handleSubmit} className={css.form}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label className={css.formLabel}>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"number\">\n          <Form.Label className={css.formLabel}>Number</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"number\"\n            placeholder=\"Enter number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            required\n          />\n        </Form.Group>\n        <Button\n          className={css.contactFormBtn}\n          variant=\"outline-warning\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/operations';\nimport { selectUserContacts } from 'redux/contacts/selectors';\n\nconst useShowContacts = () => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  return { handleDeleteContact, contacts };\n};\n\nexport default useShowContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactList_container__hYHc3\",\"contactList\":\"ContactList_contactList__UFVCg\",\"listItem\":\"ContactList_listItem__SptUx\",\"listItemBtn\":\"ContactList_listItemBtn__YmrJe\",\"contactsEmptyText\":\"ContactList_contactsEmptyText__0Qk08\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthentificated } from 'redux/authentication/selectors';\nimport { requestContactsThunk } from 'redux/contacts/operations';\nimport useShowContacts from 'hooks/useShowContacts.js';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const { handleDeleteContact, contacts } = useShowContacts();\n  const authentificated = useSelector(selectAuthentificated);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    showContacts && (\n      <div className={css.container}>\n        <ul className={css.contactList}>\n          {contacts.map(contact => {\n            return (\n              <li key={contact.id} className={css.listItem}>\n                {contact.name}: {contact.number}\n                <button\n                  className={css.listItemBtn}\n                  onClick={() => handleDeleteContact(contact.id)}\n                  type=\"button\"\n                  aria-label=\"Delete contact\"\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    )\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"ContactsPage_contactsSection__T4mXv\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\nimport {\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/contacts/selectors';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  return (\n    <section className={css.contactsSection}>\n      <ContactForm />\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured... {error}</p>}\n      <ContactList />\n    </section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectUserContacts","state","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","useSelector","dispatch","useDispatch","handleSubmit","event","preventDefault","form","currentTarget","name","elements","value","number","some","contact","alert","concat","addContactThunk","reset","useAddContact","_jsxs","className","css","children","_jsx","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","title","pattern","required","Text","Button","variant","handleDeleteContact","contactId","deleteContactThunk","_useShowContacts","useShowContacts","authentificated","selectAuthentificated","useEffect","requestContactsThunk","Array","isArray","length","map","onClick","id","ContactForm","Loader","ContactList"],"sourceRoot":""}